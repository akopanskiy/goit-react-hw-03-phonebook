{"version":3,"sources":["component/Section/Section.module.css","component/Filter/Filter.module.css","component/ContactForm/Form.module.css","component/ContactForm/ContactForm.js","component/ContactList/ContactList.js","component/Filter/Filter.js","component/Section/Section.js","App.js","index.js","component/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameId","shortid","generate","numberId","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","styles","form","this","htmlFor","flexRow","lfInput","type","placeholder","pattern","title","required","onChange","id","label","lfSubmit","Component","ContactList","contacts","onDeleteContact","list","map","contactList","contactsNameNumber","buttonDelete","onClick","Filter","Section","children","App","filter","addContact","contact","find","alert","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","myContacts","localStorage","getItem","parsedMyContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,wB,mBCAtDD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,YAAY,4B,kBCAhED,EAAOC,QAAU,CAAC,QAAU,sBAAsB,QAAU,sBAAsB,YAAY,wBAAwB,SAAW,yB,+JC4DlHC,E,4MAxDbC,MAAQ,CAAEC,KAAM,GAAIC,OAAQ,I,EAC5BC,OAASC,IAAQC,W,EACjBC,SAAWF,IAAQC,W,EAEnBE,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAEE,cAAcT,KAAOO,EAAEE,cAAcC,S,EAE1DC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKf,MAAMC,KAAM,EAAKD,MAAME,QAChD,EAAKO,SAAS,CAAER,KAAM,GAAIC,OAAQ,M,4CAEpC,WACE,OACE,mCACE,uBAAMc,UAAWC,IAAOC,KAAMH,SAAUI,KAAKP,aAA7C,UACE,uBAAOQ,QAASD,KAAKhB,OAArB,SACE,qBAAKa,UAAWC,IAAOI,QAAvB,SACE,uBACEL,UAAWC,IAAOK,QAClBC,KAAK,OACLtB,KAAK,OACLuB,YAAY,OACZb,MAAOQ,KAAKnB,MAAMC,KAClBwB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUT,KAAKZ,aACfsB,GAAIV,KAAKhB,aAIf,uBAAOa,UAAWC,IAAOa,MAAOV,QAASD,KAAKb,SAA9C,SACE,qBAAKU,UAAWC,IAAOI,QAAvB,SACE,uBACEL,UAAWC,IAAOK,QAClBE,YAAY,SACZD,KAAK,MACLtB,KAAK,SACLU,MAAOQ,KAAKnB,MAAME,OAClBuB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUT,KAAKZ,aACfsB,GAAIV,KAAKb,eAIf,wBAAQU,UAAWC,IAAOc,SAAUR,KAAK,SAAzC,kC,GAjDgBS,a,gBCkBXC,EAnBK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/B,OACE,oBAAInB,UAAWC,IAAOmB,KAAtB,SACGF,EAASG,KAAI,gBAAGpC,EAAH,EAAGA,KAAM4B,EAAT,EAASA,GAAI3B,EAAb,EAAaA,OAAb,OACZ,qBAAIc,UAAWC,IAAOqB,YAAtB,UACE,uBAAMtB,UAAWC,IAAOsB,mBAAxB,UACGtC,EADH,KACWC,KAEX,wBACEc,UAAWC,IAAOuB,aAClBC,QAAS,kBAAMN,EAAgBN,IAFjC,sBAJsCA,S,iBCSjCa,EAbA,SAAC,GAAyB,IAAvB/B,EAAsB,EAAtBA,MAAOiB,EAAe,EAAfA,SACvB,OACE,gCACE,uBACEZ,UAAWC,IAAOK,QAClBE,YAAY,wBACZD,KAAK,OACLZ,MAAOA,EACPiB,SAAUA,O,iBCAHe,EARC,SAAC,GAAyB,IAAvBjB,EAAsB,EAAtBA,MAAOkB,EAAe,EAAfA,SACxB,OACE,sBAAK5B,UAAWC,IAAOC,KAAvB,UACE,oBAAIF,UAAWC,IAAOhB,KAAtB,SAA6ByB,IAC5BkB,MC2EQC,E,4MA1Eb7C,MAAQ,CACNkC,SAAU,CACR,CAAEL,GAAI,OAAQ5B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE2B,GAAI,OAAQ5B,KAAM,iBAAkBC,OAAQ,aAC9C,CAAE2B,GAAI,OAAQ5B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE2B,GAAI,OAAQ5B,KAAM,iBAAkBC,OAAQ,cAEhD4C,OAAQ,I,EAGVC,WAAa,SAAC9C,EAAMC,GAClB,IAAM8C,EAAU,CACdnB,GAAIzB,IAAQC,WACZJ,OACAC,UAEE,EAAKF,MAAMkC,SAASe,MAAK,SAAAD,GAAO,OAAIA,EAAQ/C,OAASA,KACvDiD,MAAM,GAAD,OAAIjD,EAAJ,4BAGP,EAAKQ,UAAS,SAAA0C,GAAS,MAAK,CAC1BjB,SAAS,CAAEc,GAAH,mBAAeG,EAAUjB,gB,EAIrCkB,aAAe,SAAA5C,GACb,EAAKC,SAAS,CAAEqC,OAAQtC,EAAEE,cAAcC,S,EAG1C0C,mBAAqB,WACnB,IAAMC,EAAmB,EAAKtD,MAAM8C,OAAOS,cAC3C,OAAO,EAAKvD,MAAMkC,SAASY,QAAO,SAAAE,GAAO,OACvCA,EAAQ/C,KAAKsD,cAAcC,SAASF,O,EAGxCG,cAAgB,SAAAC,GACd,EAAKjD,UAAS,SAAA0C,GAAS,MAAK,CAC1BjB,SAAUiB,EAAUjB,SAASY,QAAO,SAAAE,GAAO,OAAIA,EAAQnB,KAAO6B,U,uDAIlE,WACE,IAAMC,EAAaC,aAAaC,QAAQ,YAClCC,EAAmBC,KAAKC,MAAML,GAEhCG,GACF3C,KAAKV,SAAS,CAAEyB,SAAU4B,M,gCAI9B,SAAmBG,EAAWd,GACxBhC,KAAKnB,MAAMkC,WAAaiB,GAC1BS,aAAaM,QAAQ,WAAYH,KAAKI,UAAUhD,KAAKnB,MAAMkC,a,oBAG/D,WACE,IAAMkC,EAAkBjD,KAAKkC,qBAE7B,OACE,qCACE,cAAC,EAAD,CAAS3B,MAAO,YAAhB,SACE,cAAC,EAAD,CAAaX,SAAUI,KAAK4B,eAE9B,eAAC,EAAD,CAASrB,MAAO,WAAhB,UACE,cAAC,EAAD,CAAQf,MAAOQ,KAAKnB,MAAM8C,OAAQlB,SAAUT,KAAKiC,eACjD,cAAC,EAAD,CACElB,SAAUkC,EACVjC,gBAAiBhB,KAAKsC,0B,GApEhBzB,aCHlBqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1B5E,EAAOC,QAAU,CAAC,KAAO,0BAA0B,YAAc,iCAAiC,mBAAqB,wCAAwC,aAAe,qC","file":"static/js/main.2f259b3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Section_form__62xnk\",\"name\":\"Section_name__1VAHk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lfInput\":\"Filter_lfInput__nCh4U\",\"lf--input\":\"Filter_lf--input__2-xLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexRow\":\"Form_flexRow__3-FHr\",\"lfInput\":\"Form_lfInput___xxTd\",\"lf--input\":\"Form_lf--input__2dVJ_\",\"lfSubmit\":\"Form_lfSubmit__6LWhr\"};","import { Component } from 'react';\nimport shortid from 'shortid';\nimport styles from './Form.module.css';\n\nclass ContactForm extends Component {\n  state = { name: '', number: '' };\n  nameId = shortid.generate();\n  numberId = shortid.generate();\n\n  handleChange = e => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.name, this.state.number);\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <>\n        <form className={styles.form} onSubmit={this.handleSubmit}>\n          <label htmlFor={this.nameId}>\n            <div className={styles.flexRow}>\n              <input\n                className={styles.lfInput}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n                value={this.state.name}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                onChange={this.handleChange}\n                id={this.nameId}\n              />\n            </div>\n          </label>\n          <label className={styles.label} htmlFor={this.numberId}>\n            <div className={styles.flexRow}>\n              <input\n                className={styles.lfInput}\n                placeholder=\"Number\"\n                type=\"tel\"\n                name=\"number\"\n                value={this.state.number}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                onChange={this.handleChange}\n                id={this.numberId}\n              />\n            </div>\n          </label>\n          <button className={styles.lfSubmit} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\nexport default ContactForm;\n","import React from 'react';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ name, id, number }) => (\n        <li className={styles.contactList} key={id}>\n          <span className={styles.contactsNameNumber}>\n            {name}: {number}\n          </span>\n          <button\n            className={styles.buttonDelete}\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default ContactList;\n","import React from 'react';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      <input\n        className={styles.lfInput}\n        placeholder=\"Find contacts by name\"\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\nexport default Filter;\n","import React from 'react';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={styles.form}>\n      <h1 className={styles.name}>{title}</h1>\n      {children}\n    </div>\n  );\n};\nexport default Section;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './component/ContactForm';\nimport ContactList from './component/ContactList';\nimport Filter from './component/Filter';\nimport Section from './component/Section';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    const myContacts = localStorage.getItem('contacts');\n    const parsedMyContacts = JSON.parse(myContacts);\n\n    if (parsedMyContacts) {\n      this.setState({ contacts: parsedMyContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <Section title={'Phonebook'}>\n          <ContactForm onSubmit={this.addContact} />\n        </Section>\n        <Section title={'Contacts'}>\n          <Filter value={this.state.filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__IwcLi\",\"contactList\":\"ContactList_contactList__2YARj\",\"contactsNameNumber\":\"ContactList_contactsNameNumber__5fSGN\",\"buttonDelete\":\"ContactList_buttonDelete__3hmLo\"};"],"sourceRoot":""}